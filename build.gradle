plugins {
    id 'java'
    id 'io.papermc.paperweight.userdev' version '1.3.8'
}

group = 'distortiongate'
version = '0.1'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
//    maven {
//        name = 'papermc-repo'
//        url = 'https://repo.papermc.io/repository/maven-public/'
//    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'phoenix'
        url = 'https://nexus.phoenixdvpt.fr/repository/maven-public/'
    }
    maven {
        name = 'Lumine Releases'
        url = 'https://mvn.lumine.io/repository/maven-public/'
    }
    maven {
        url = 'https://repo.dmulloy2.net/repository/public/'
    }
}

dependencies {
    compileOnly 'net.Indyuce:MMOCore-API:1.9.5-SNAPSHOT'
    compileOnly 'io.lumine:MythicLib-dist:1.4.1-SNAPSHOT'
    compileOnly 'com.comphenix.protocol:ProtocolLib:4.8.0'
    paperweightDevelopmentBundle("io.papermc.paper:dev-bundle:1.18.2-R0.1-SNAPSHOT")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks.withType(Jar) {
    destinationDirectory = file("C:\\Users\\sota5\\Downloads")
}
